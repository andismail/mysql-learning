二进制：运算简单 简化了计算机结构，程序中的数都是以二进制存的(?)，在特定情况下计算方便，速度快，被支持面广
	如果用算数方法速度慢逻辑复杂，如单片机中可能不支持一些复杂处理但位运算一定支持(?)

十进制转二进制：采用短除法除2，例如57从下往上数得出结果111001

位运算：
	按拉与&：两位全为1，结果才为1	例如：0&0=0 1&0=0 0&1=0 1&1=1
		用途：清零。如果想将一个单元清零，即使其全部二进制位为0，只要与一个各位都为0的数做&运算，结果为零
		      取一个数中指定位。例如：x=10101110，取x的低4位，用x&0000 1111=0000 1110即可得到

	按位或|：只要有一个为1，结果就为1	例如 1|0=1 0|1=1 1|1=1 0|0=0
		用法：常用来对一个数据的某些位置1

	异或运算^：两个相应位为'异(值不同)'，则该位结果为1，否则为0	例如：0^0=0 1^1=0 0^1=1 1^0=1
		用途：使特定位翻转	例如：x=10101110，使x低4位翻转，用x^0000 1111即可
		      与0异或保留原值	例如：x=10101110，x^0000 0000=10101110
		      两个变量交换值的方法
			1.借助第三个变量来实现	C=A;A=B;B=C;
			2.利用加减法实现两个变量交换	A=A+B;B=A-B;A=A-B;
			3.用位运算中的异或运算来实现，也是效率最高的	A=A^B;B=A^B;A=A^B    原理：利用一个数异或本身等于0和异或运算符合交换率

	取反运算~：对一个二进制数按位取反，即将0变1，将1变0。	例如：~0=1 ~1=0

	正数的左移运算<<	正数的右移运算>>	无符号右称>>>
